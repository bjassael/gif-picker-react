{"version":3,"sources":["../src/index.tsx","../src/components/ErrorBoundary.tsx","../src/GifPickerReact.tsx","../src/components/body/Body.tsx","../src/context/PickerContext.ts","../src/context/TenorContext.ts","#style-inject:#style-inject","../src/components/body/Body.css","../src/components/body/CategoryList.tsx","../src/components/placeholders/CategoryPlaceholder.tsx","../src/context/SettingsContext.ts","../src/components/placeholders/CategoryPlaceholder.css","../src/components/placeholders/Placeholder.tsx","../src/components/placeholders/Placeholder.css","../src/components/body/CategoryList.css","../src/components/body/FeaturedCategory.tsx","../src/components/body/Category.tsx","../src/components/body/Category.css","../src/components/body/TrendingCategory.tsx","../src/components/body/TrendingCategory.css","../src/components/body/SearchResult.tsx","../src/components/body/GifList.tsx","../src/components/body/GifList.css","../src/components/body/GifListPlaceholder.tsx","../src/components/placeholders/ResultPlaceholder.tsx","../src/components/placeholders/ResultPlaceholder.css","../src/components/body/ResultImage.tsx","../src/components/body/ResultImage.css","../src/components/body/TrendingResult.tsx","../src/components/header/Header.tsx","../src/components/header/Header.css","../src/components/header/Search.tsx","../src/components/header/ClearButton.tsx","../src/components/Button.tsx","../src/components/header/ClearButton.css","../src/components/header/Search.css","../src/components/header/Title.tsx","../src/components/header/Title.css","../src/components/PickerMain.tsx","../src/types/exposedTypes.ts","../src/GifPickerReact.css","../src/hooks/usePickerContext.ts","../src/hooks/useSettings.ts","../src/managers/TenorManager.ts"],"names":["React","ErrorBoundary","props","error","errorInfo","useMemo","useContext","useEffect","useRef","useState","PickerContext","PickerContext_default","TenorContext","TenorContext_default","styleInject","css","insertAt","head","style","SettingsContext","SettingsContext_default","Placeholder","Placeholder_default","CategoryPlaceholder","settings","CategoryPlaceholder_default","Category","image","text","onClick","Category_default","FeaturedCategory","name","pickerContext","setPickerContext","contextCopy","FeaturedCategory_default","TrendingCategory","TrendingCategory_default","CategoryList","categories","trending","columnsCount","_a","getCleanedCategories","SPECIAL_CATEGORIES_COUNT","excessCategoriesCount","cat","i","_","CategoryList_default","ResultPlaceholder","height","showDelay","show","setShow","showElement","timeout","ResultPlaceholder_default","PLACEHOLDER_HEIGHTS","GifListPlaceholder","j","GifListPlaceholder_default","ResultImage","searchTerm","tenor","func","ResultImage_default","GifList","isLoading","result","columns","generateColumns","isEmpty","col","img","columnsHeight","aspectRatio","shortestColumnIndex","GifList_default","SearchResult","searchResult","setSearchResult","setLoading","search","debounce","SearchResult_default","TrendingResult","trendingResult","TrendingResult_default","MAX_COLUMN_WIDTH","Body","width","setCategories","setTrending","setColumnsCount","ref","categoryList","trendingList","Body_default","Button","Button_default","ClearButton","ClearButton_default","Search","onChange","event","onClear","Search_default","Title","children","Title_default","Header","Header_default","ContentFilter","Theme","PickerMain","PickerMain_default","usePickerContext","DEFAULT_SETTINGS","usePickerContext_default","useSettings","praseDimension","getTheme","dimension","theme","isSystemDarkTheme","useSettings_default","MEDIA_FILTER","BASE_URL","TenorManager","apiKey","clientKey","country","locale","contentFilter","endpoint","params","urlParams","url","res","preview","gif","data","tag","term","limit","images","TenorManager_default","GifPickerReact","tenorManager","GifPickerReact_default","GifPicker","src_default"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport GifPickerReact, { GifPickerReactProps } from './GifPickerReact';\n\nexport {\n\tContentFilter, TenorImage, Theme\n} from './types/exposedTypes';\n\nexport interface GifPickerProps extends GifPickerReactProps { }\n\nfunction GifPicker(props: GifPickerProps): JSX.Element {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<GifPickerReact {...props} />\n\t\t</ErrorBoundary>\n\t);\n}\n\nexport default GifPicker;\n","import * as React from 'react';\n\nexport interface ErrorBoundaryProps {\n    children: React.ReactNode;\n}\n\nexport interface ErrorBoundaryState {\n    hasError: boolean;\n}\n\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n\tconstructor(props: { children: React.ReactNode }) {\n\t\tsuper(props);\n\t\tthis.state = { hasError: false };\n\t}\n\n\tstatic getDerivedStateFromError(): ErrorBoundaryState {\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error: Error, errorInfo: any): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('GIF Picker React failed to render:', error, errorInfo);\n\t}\n\n\trender(): React.ReactNode {\n\t\tif (this.state.hasError) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n","import React, { useMemo } from 'react';\nimport Body from './components/body/Body';\nimport Header from './components/header/Header';\nimport PickerMain from './components/PickerMain';\nimport PickerContext from './context/PickerContext';\nimport SettingsContext from './context/SettingsContext';\nimport TenorContext from './context/TenorContext';\nimport './GifPickerReact.css';\nimport usePickerContext from './hooks/usePickerContext';\nimport useSettings from './hooks/useSettings';\nimport TenorManager from './managers/TenorManager';\nimport { ContentFilter, TenorImage, Theme } from './types/exposedTypes';\n\nexport interface GifPickerReactProps {\n\ttenorApiKey: string;\n\tonGifClick?: (gif: TenorImage) => void;\n\tautoFocusSearch?: boolean;\n\tcontentFilter?: ContentFilter;\n\tclientKey?: string;\n\tcountry?: string;\n\tlocale?: string;\n\twidth?: number | string;\n\theight?: number | string;\n\tcategoryHeight?: number | string;\n\ttheme?: Theme;\n}\n\nfunction GifPickerReact(props: GifPickerReactProps): JSX.Element {\n\tconst settings = useSettings(props);\n\tconst pickerContext = usePickerContext();\n\tconst tenorManager: TenorManager = useMemo(() => (\n\t\tnew TenorManager(settings.tenorApiKey, settings.clientKey,\n\t\t\tsettings.country, settings.locale, settings.contentFilter)\n\t), [ ]);\n\n\treturn (\n\t\t<SettingsContext.Provider value={settings}>\n\t\t\t<PickerContext.Provider value={pickerContext}>\n\t\t\t\t<TenorContext.Provider value={tenorManager}>\n\t\t\t\t\t<PickerMain>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<Body width={props.width} />\n\t\t\t\t\t</PickerMain>\n\t\t\t\t</TenorContext.Provider>\n\t\t\t</PickerContext.Provider>\n\t\t</SettingsContext.Provider>\n\t);\n}\n\nexport default GifPickerReact;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport PickerContext from '../../context/PickerContext';\nimport TenorContext from '../../context/TenorContext';\nimport { TenorCategory } from '../../managers/TenorManager';\nimport { TenorImage } from '../../types/exposedTypes';\nimport './Body.css';\nimport CategoryList from './CategoryList';\nimport SearchResult from './SearchResult';\nimport TrendingResult from './TrendingResult';\n\nconst MAX_COLUMN_WIDTH = 170;\n\nexport interface BodyProps {\n\t/**\n\t * Width prop is here is for sole purpose of updating the\n\t * columns calculations when width prop change\n\t */\n\twidth?: number | string;\n}\n\nfunction Body({ width }: BodyProps): JSX.Element {\n\tconst [ categories, setCategories ] = useState<TenorCategory[] | undefined>(undefined);\n\tconst [ trending, setTrending ] = useState<TenorImage | undefined>(undefined);\n\tconst [ pickerContext ] = useContext(PickerContext);\n\tconst [ columnsCount, setColumnsCount ] = useState(1);\n\tconst tenor = useContext(TenorContext);\n\tconst ref = useRef<HTMLDivElement>(null);\n\n\t/**\n\t * Load categories and first trending image for home page\n\t */\n\tuseEffect(() => {\n\t\t(async (): Promise<any> => {\n\t\t\tconst categoryList = await tenor.categories();\n\t\t\tsetCategories(categoryList);\n\t\t\tconst trendingList = await tenor.trending(1);\n\t\t\tsetTrending(trendingList.images[0]);\n\t\t})();\n\t}, []);\n\n\t/**\n\t * Calculate amount of columns to display\n\t */\n\tuseEffect(() => {\n\t\tconst width = ref.current ? ref.current.offsetWidth : 0;\n\t\tlet columns = Math.floor( width / MAX_COLUMN_WIDTH );\n\t\tif(columns < 1) columns = 1;\n\t\tsetColumnsCount(columns);\n\t}, [ ref.current, width ]);\n\n\treturn (\n\t\t<div className='gpr-body' ref={ref}>\n\t\t\t{((): JSX.Element => {\n\t\t\t\tif(pickerContext.showTrending) {\n\t\t\t\t\treturn <TrendingResult columnsCount={columnsCount} />;\n\t\t\t\t}\n\t\t\t\telse if(pickerContext.searchTerm) {\n\t\t\t\t\treturn <SearchResult columnsCount={columnsCount} searchTerm={pickerContext.searchTerm} />;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn <CategoryList columnsCount={columnsCount} categories={categories} trending={trending} />;\n\t\t\t\t}\n\t\t\t})()}\n\t\t</div>\n\t);\n}\n\nexport default Body;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { PickerContextType } from '../hooks/usePickerContext';\n\nconst PickerContext = React.createContext<[PickerContextType, Dispatch<SetStateAction<PickerContextType>>]>(null!);\n\nexport default PickerContext;\n","import * as React from 'react';\nimport TenorManager from '../managers/TenorManager';\n\nconst TenorContext = React.createContext<TenorManager>(null!);\n\nexport default TenorContext;\n","\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-body{display:flex;flex:1;min-height:0}\\n\")","import React from 'react';\nimport { TenorImage } from '../../../dist';\nimport { TenorCategory } from '../../managers/TenorManager';\nimport CategoryPlaceholder from '../placeholders/CategoryPlaceholder';\nimport './CategoryList.css';\nimport FeaturedCategory from './FeaturedCategory';\nimport TrendingCategory from './TrendingCategory';\n\nexport interface CategoryListProps {\n\tcategories?: TenorCategory[];\n\ttrending?: TenorImage;\n\tcolumnsCount: number;\n}\n\nfunction CategoryList({ categories, trending, columnsCount }: CategoryListProps): JSX.Element {\n\t/**\n     * Make sure that last categories row is always full by removing\n     * excess categories so the total count is devisable by column count\n     */\n\tfunction getCleanedCategories() {\n\t\tif(!categories) return undefined;\n\n\t\tconst SPECIAL_CATEGORIES_COUNT = 1; // Trending\n\t\tconst totalCategoriesCount = categories.length + SPECIAL_CATEGORIES_COUNT;\n\t\tconst excessCategoriesCount = totalCategoriesCount % columnsCount;\n\n\t\tif(excessCategoriesCount == 0) return categories;\n\t\treturn categories?.slice(0, -excessCategoriesCount);\n\t}\n\n\treturn (\n\t\t<div className='gpr-category-list' style={{gridTemplateColumns: `repeat(${columnsCount}, 1fr)`}}>\n\t\t\t{categories && trending ? (\n\t\t\t\t<>\n\t\t\t\t\t<TrendingCategory image={trending.url} />\n\t\t\t\t\t{getCleanedCategories()?.map((cat, i) => (\n\t\t\t\t\t\t<FeaturedCategory key={i} image={cat.image} name={cat.name} />\n\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t{[ ...Array(10 * columnsCount) ].map((_, i) => (\n\t\t\t\t\t\t<CategoryPlaceholder key={i} />\n\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default CategoryList;\n","import React, { useContext } from 'react';\nimport SettingsContext from '../../context/SettingsContext';\nimport './CategoryPlaceholder.css';\nimport Placeholder from './Placeholder';\n\nfunction CategoryPlaceholder() {\n\tconst settings = useContext(SettingsContext);\n\n\treturn (\n\t\t<Placeholder className=\"gpr-category-placeholder\" height={settings.categoryHeight} width='100%' />\n\t);\n}\n\nexport default CategoryPlaceholder;\n","import * as React from 'react';\nimport { GifPickerSettings } from '../hooks/useSettings';\n\nconst SettingsContext = React.createContext<GifPickerSettings>(null!);\n\nexport default SettingsContext;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-category-placeholder{border-radius:var(--gpr-category-border-radius);position:relative}\\n\")","import React from 'react';\nimport './Placeholder.css';\n\nexport interface PlaceholderProps  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>{\n    width?: number | string;\n    height?: number | string;\n\tclassName?: string;\n}\n\nfunction Placeholder(props: PlaceholderProps) {\n\treturn (\n\t\t<div\n\t\t\t{...props}\n\t\t\tclassName={`gpr-placeholder ${props.className || ''}`}\n\t\t\tstyle={{ width: props.width, height: props.height, ...props.style }}\n\t\t></div>\n\t);\n}\n\nexport default Placeholder;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-placeholder{background-color:var(--gpr-placeholder-color);transition:opacity .2s ease-in-out}\\n\")","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-category-list{grid-gap:var(--gpr-category-list-padding);display:grid;flex:1;grid-auto-rows:min-content;overflow-y:scroll;padding:var(--gpr-body-padding)}\\n\")","import React, { useContext } from 'react';\nimport PickerContext from '../../context/PickerContext';\nimport Category from './Category';\n\nexport interface FeaturedCategory {\n\timage: string;\n\tname: string;\n}\n\nfunction FeaturedCategory({ image, name }: FeaturedCategory): JSX.Element {\n\tconst [ pickerContext, setPickerContext ] = useContext(PickerContext);\n\n\tfunction onClick(): void {\n\t\tconst contextCopy = Object.assign({}, pickerContext);\n\t\tcontextCopy.searchTerm = name;\n\t\tsetPickerContext(contextCopy);\n\t}\n\n\treturn (\n\t\t<Category image={image} text={name} onClick={onClick} />\n\t);\n}\n\nexport default FeaturedCategory;\n","import React, { useContext } from 'react';\nimport SettingsContext from '../../context/SettingsContext';\nimport './Category.css';\n\nexport interface CategoryProps {\n\timage: string;\n\ttext: React.ReactNode | string;\n\tonClick?: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nfunction Category({ image, text, onClick}: CategoryProps): JSX.Element {\n\tconst settings = useContext(SettingsContext);\n\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName='gpr-btn gpr-category'\n\t\t\tstyle={{height: settings.categoryHeight}}\n\t\t\tdata-testid='gpr-category'\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t<img src={image} loading=\"lazy\"/>\n\t\t\t<div className='gpr-category-overlay'>\n\t\t\t\t<div className='gpr-category-name'>\n\t\t\t\t\t{text}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</button>\n\t);\n}\n\nexport default Category;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-category{border-radius:var(--gpr-category-border-radius);cursor:pointer;position:relative;transition:box-shadow .15s ease-in-out}.GifPickerReact .gpr-category img{background-color:#d3d3d3;border-radius:var(--gpr-category-border-radius);height:100%;-o-object-fit:cover;object-fit:cover;width:100%}.GifPickerReact .gpr-category-overlay{align-items:center;background-color:rgba(0,0,0,var(--gpr-category-background-opacity));border-radius:var(--gpr-category-border-radius);display:flex;height:100%;justify-content:center;left:0;overflow:hidden;position:absolute;top:0;transition:background-color .15s ease-in-out;width:100%}.GifPickerReact .gpr-category-overlay .gpr-category-name{color:var(--gpr-category-font-color);font-size:var(--gpr-category-font-size);font-weight:var(--gpr-category-font-weight);text-shadow:0 1px 1px rgba(0,0,0,var(--gpr-category-shadow-opacity))}.GifPickerReact .gpr-category:hover{box-shadow:0 0 0 2px var(--gpr-category-border-color-hover)}.GifPickerReact .gpr-category:hover .gpr-category-overlay{background-color:rgba(0,0,0,var(--gpr-category-shadow-opacity-hover))}\\n\")","import React, { useContext } from 'react';\nimport PickerContext from '../../context/PickerContext';\nimport Category from './Category';\nimport './TrendingCategory.css';\n\nexport interface FeaturedCategory {\n\timage: string;\n}\n\nfunction TrendingCategory({ image }: FeaturedCategory): JSX.Element {\n\tconst [ pickerContext, setPickerContext ] = useContext(PickerContext);\n\n\tfunction onClick(): void {\n\t\tconst contextCopy = Object.assign({}, pickerContext);\n\t\tcontextCopy.showTrending = true;\n\t\tsetPickerContext(contextCopy);\n\t}\n\n\treturn (\n\t\t<Category image={image} onClick={onClick} text={(\n\t\t\t<div className='gpr-text-trending-category'>\n\t\t\t\t<div className=\"gpr-icn-trending\" />\n\t\t\t\t<span>Trending GIFs</span>\n\t\t\t</div>\n\t\t)} />\n\t);\n}\n\nexport default TrendingCategory;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-icn-trending{background-color:transparent;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='48' height='48'%3E%3Cpath fill='%23fff' d='M6.3 37 4 34.7l15-15 8 8.05L41.9 11l2.1 2.05-17 19.2-8-7.95Z'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;background-size:20px;height:20px;width:20px}.GifPickerReact .gpr-category .gpr-text-trending-category{align-items:center;display:flex;gap:4px}\\n\")","import React, { useContext, useEffect, useState } from 'react';\nimport TenorContext from '../../context/TenorContext';\nimport { TenorResult } from '../../managers/TenorManager';\nimport GifList from './GifList';\n\nexport interface SearchResultProps {\n\tsearchTerm: string;\n\tcolumnsCount: number;\n}\n\nfunction SearchResult({ searchTerm, columnsCount }: SearchResultProps) {\n\tconst [ searchResult, setSearchResult ] = useState<TenorResult>(null!);\n\tconst [ isLoading, setLoading ] = useState(true);\n\tconst tenor = useContext(TenorContext);\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\tasync function search(): Promise<any> {\n\t\t\tconst result = await tenor.search(searchTerm);\n\t\t\tsetSearchResult(result);\n\t\t\tsetLoading(false);\n\t\t}\n\t\tconst debounce = setTimeout(() => search(), 800);\n\t\treturn (): void => clearTimeout(debounce);\n\t}, [ searchTerm ]);\n\n\treturn (\n\t\t<GifList isLoading={isLoading} columnsCount={columnsCount} result={searchResult} searchTerm={searchTerm} />\n\t);\n}\n\nexport default SearchResult;\n","import React, { useMemo } from 'react';\nimport { TenorResult } from '../../managers/TenorManager';\nimport { TenorImage } from '../../types/exposedTypes';\nimport './GifList.css';\nimport GifListPlaceholder from './GifListPlaceholder';\nimport ResultImage from './ResultImage';\n\nexport interface GifListProps {\n\tisLoading: boolean;\n\tresult?: TenorResult;\n\tsearchTerm?: string;\n\tcolumnsCount: number;\n}\n\nfunction GifList({ isLoading, result, searchTerm, columnsCount }: GifListProps): JSX.Element {\n\tconst columns = useMemo(() => generateColumns(result, columnsCount), [ result, columnsCount ]);\n\tconst isEmpty = !result || result.images.length <= 0;\n\n\tif(isLoading) {\n\t\treturn <GifListPlaceholder columnsCount={columnsCount} />;\n\t}\n\n\tif(isEmpty) {\n\t\treturn (\n\t\t\t<div className='gpr-gif-list-no-result'>\n\t\t\t\t<span>No GIFs found!</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='gpr-gif-list'>\n\t\t\t{columns.map((col, i) => (\n\t\t\t\t<div className='gpr-gif-list-column' key={i}>\n\t\t\t\t\t{col.map((img) => (\n\t\t\t\t\t\t<ResultImage key={img.id} image={img} searchTerm={searchTerm} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\n/**\n * Splits TenorResult into grid of TenorImage with set amount of columns\n * Columns should have more or less similar height but don't necessarily need to\n * have fixed amount of elements, GIFs don't have uniform heights\n *\n * @returns array of columns (which are the arrays of TenorImage)\n */\nfunction generateColumns(result?: TenorResult, columnsCount = 2 ): TenorImage[][] {\n\tif(!result) return [];\n\tconst columns: TenorImage[][] = new Array(columnsCount).fill(null).map(() => []);\n\tconst columnsHeight = new Array(columnsCount).fill(0);\n\n\tfor(const img of result.images) {\n\t\tconst aspectRatio = img.preview.height / img.preview.width;\n\t\t// We want to put image of this loop in shortest column (smallest width)\n\t\tconst shortestColumnIndex = columnsHeight.indexOf(Math.min(...columnsHeight));\n\t\tcolumns[shortestColumnIndex].push(img);\n\t\t// Here we actually add aspect ratio rather than height since design is responsive\n\t\tcolumnsHeight[shortestColumnIndex] += aspectRatio;\n\t}\n\treturn columns;\n}\n\nexport default GifList;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-gif-list{display:flex;flex:1;flex-direction:row;gap:var(--gpr-category-list-padding);overflow-y:scroll;padding:var(--gpr-body-padding)}.GifPickerReact .gpr-gif-list-column{grid-gap:var(--gpr-category-list-padding);display:grid;flex:1;grid-auto-rows:min-content;grid-template-columns:1fr;grid-template-rows:auto 1fr}.GifPickerReact .gpr-gif-list-no-result{align-items:center;display:flex;flex:1;justify-content:center;padding-bottom:30%}\\n\")","import React from 'react';\nimport ResultPlaceholder from '../placeholders/ResultPlaceholder';\n\nconst PLACEHOLDER_HEIGHTS = [\n\t[ 120, 100, 130, 175, 154, 110 ],\n\t[ 150, 115, 135, 154, 145, 170 ],\n\t[ 140, 125, 120, 150, 100, 125 ],\n\t[ 130, 145, 175, 120, 135, 100 ]\n];\n\nexport interface GifListPlaceholderProps {\n\tcolumnsCount: number;\n\tshowDelay?: number;\n}\n\nfunction GifListPlaceholder({ columnsCount, showDelay = 70 }: GifListPlaceholderProps) {\n\treturn (\n\t\t<div className='gpr-gif-list'>\n\t\t\t{[ ...Array(columnsCount) ].map((_, i) => (\n\t\t\t\t<div className='gpr-gif-list-column' key={i}>\n\t\t\t\t\t{PLACEHOLDER_HEIGHTS[i % PLACEHOLDER_HEIGHTS.length].map((height, j) => (\n\t\t\t\t\t\t<ResultPlaceholder\n\t\t\t\t\t\t\tkey={j} height={height}\n\t\t\t\t\t\t\tshowDelay={((j + 1) * showDelay * columnsCount) + showDelay * i}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default GifListPlaceholder;\n","import React, { useEffect, useState } from 'react';\nimport Placeholder from './Placeholder';\nimport './ResultPlaceholder.css';\n\nexport interface ResultPlaceholderProps {\n\theight: number | string;\n\tshowDelay?: number;\n}\n\nfunction ResultPlaceholder({ height, showDelay }: ResultPlaceholderProps) {\n\tconst [ show, setShow ] = useState(false);\n\n\tuseEffect(() => {\n\t\tif(show) return;\n\t\tfunction showElement() {\n\t\t\tsetShow(true);\n\t\t}\n\t\tconst timeout = setTimeout(showElement, showDelay);\n\t\treturn () => clearTimeout(timeout);\n\t}, [ ]);\n\n\treturn (\n\t\t<Placeholder\n\t\t\tclassName=\"gpr-result-placeholder\"\n\t\t\theight={height} width='100%'\n\t\t\tstyle={{ opacity: show ? 1 : 0 }}\n\t\t/>\n\t);\n}\n\nexport default ResultPlaceholder;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-result-placeholder{border-radius:var(--gpr-category-border-radius)}\\n\")","import React, { useContext } from 'react';\nimport SettingsContext from '../../context/SettingsContext';\nimport TenorContext from '../../context/TenorContext';\nimport { TenorImage } from '../../types/exposedTypes';\nimport './ResultImage.css';\n\nexport interface ResultImageProps {\n\timage: TenorImage;\n\tsearchTerm?: string\n}\n\nfunction ResultImage({ image, searchTerm }: ResultImageProps): JSX.Element {\n\tconst settings = useContext(SettingsContext);\n\tconst tenor = useContext(TenorContext);\n\n\tfunction onClick(): void {\n\t\tconst func = settings.onGifClick;\n\t\tif(func) func(image);\n\t\ttenor.registerShare(image, searchTerm);\n\t}\n\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName='gpr-btn gpr-result-image'\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t<img src={image.preview.url} height={image.preview.height} width={image.preview.width} loading=\"lazy\" />\n\t\t</button>\n\t);\n}\n\nexport default ResultImage;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-result-image{border-radius:var(--gpr-category-border-radius);cursor:pointer;transition:box-shadow .15s ease-in-out}.GifPickerReact .gpr-result-image img{background-color:var(--gpr-placeholder-color);border-radius:var(--gpr-category-border-radius);height:100%;-o-object-fit:cover;object-fit:cover;width:100%}.GifPickerReact .gpr-result-image:hover{box-shadow:0 0 0 2px var(--gpr-category-border-color-hover)}\\n\")","import React, { useContext, useEffect, useState } from 'react';\nimport TenorContext from '../../context/TenorContext';\nimport { TenorResult } from '../../managers/TenorManager';\nimport GifList from './GifList';\n\nexport interface TrendingResultProps {\n\tcolumnsCount: number;\n}\n\nfunction TrendingResult({ columnsCount }: TrendingResultProps) {\n\tconst [ trendingResult, setSearchResult ] = useState<TenorResult>(null!);\n\tconst [ isLoading, setLoading ] = useState(true);\n\n\tconst tenor = useContext(TenorContext);\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\t(async () => {\n\t\t\tconst result = await tenor.trending();\n\t\t\tsetSearchResult(result);\n\t\t\tsetLoading(false);\n\t\t})();\n\n\t}, [ ]);\n\n\treturn (\n\t\t<GifList columnsCount={columnsCount} isLoading={isLoading} result={trendingResult} />\n\t);\n}\n\nexport default TrendingResult;\n","import React, { useContext } from 'react';\nimport PickerContext from '../../context/PickerContext';\nimport './Header.css';\nimport Search from './Search';\nimport Title from './Title';\n\nfunction Header(): JSX.Element {\n\tconst [ pickerContext ] = useContext(PickerContext);\n\n\treturn (\n\t\t<div className='gpr-header'>\n\t\t\t{pickerContext.showTrending ? (\n\t\t\t\t<Title>Trending GIFs</Title>\n\t\t\t) : (\n\t\t\t\t<Search />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-header{border-bottom:1px solid var(--gpr-picker-border-color);min-height:0;padding:var(--gpr-header-padding)}\\n\")","import React, { useContext } from 'react';\nimport PickerContext from '../../context/PickerContext';\nimport SettingsContext from '../../context/SettingsContext';\nimport ClearButton from './ClearButton';\nimport './Search.css';\n\nfunction Search(): JSX.Element {\n\tconst [ pickerContext, setPickerContext ] = useContext(PickerContext);\n\tconst settings = useContext(SettingsContext);\n\n\tfunction onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n\t\tconst contextCopy = Object.assign({}, pickerContext);\n\t\tcontextCopy.searchTerm = event.target.value;\n\t\tsetPickerContext(contextCopy);\n\t}\n\n\tfunction onClear(): void {\n\t\tconst contextCopy = Object.assign({}, pickerContext);\n\t\tcontextCopy.searchTerm = '';\n\t\tsetPickerContext(contextCopy);\n\t}\n\n\treturn (\n\t\t<div className='gpr-search-container'>\n\t\t\t<input\n\t\t\t\tautoFocus={settings.autoFocusSearch}\n\t\t\t\taria-label={'Search Tenor'}\n\t\t\t\tplaceholder={'Search Tenor'}\n\t\t\t\tclassName=\"gpr-search\"\n\t\t\t\tdata-testid=\"gpr-search-input\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tdir=\"auto\"\n\t\t\t\tmaxLength={500}\n\t\t\t\tvalue={pickerContext.searchTerm}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<div className=\"gpr-icn-search\" />\n\t\t\t{pickerContext.searchTerm.length > 0 && (\n\t\t\t\t<ClearButton onClick={onClear} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Search;\n","import React from 'react';\nimport Button from '../Button';\nimport './ClearButton.css';\n\nexport interface ClearButtonProps {\n    onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nfunction ClearButton({ onClick }: ClearButtonProps) {\n\treturn (\n\t\t<Button className=\"gpr-btn-clear-search\" onClick={onClick}>\n\t\t\t<div className=\"gpr-icn-clear-search\" />\n\t\t</Button>\n\t);\n}\n\nexport default ClearButton;\n","import * as React from 'react';\n\ninterface PropsProps extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {}\n\nfunction Button(props: PropsProps): JSX.Element {\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\t{...props}\n\t\t\tclassName={'gpr-btn ' + props.className}\n\t\t>\n\t\t\t{props.children}\n\t\t</button>\n\t);\n}\n\nexport default Button;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact button.gpr-btn-clear-search{align-items:center;border-radius:50%;display:flex;height:20px;justify-content:end;padding:0;position:absolute;right:var(--gpr-search-bar-inner-padding);top:50%;transform:translateY(-50%);width:20px}.GifPickerReact .gpr-icn-clear-search{background-color:transparent;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' width='20' height='80'%3E%3Cpath fill='%23868686' d='M6.98 13.59a.53.53 0 0 0 .74 0l2.42-2.42 2.43 2.43a.53.53 0 0 0 .74 0c.21-.21.21-.54 0-.75l-2.43-2.43L13.32 8c.21-.21.21-.54 0-.75a.525.525 0 0 0-.75 0l-2.42 2.42-2.41-2.4a.525.525 0 0 0-.75 0c-.21.21-.21.54 0 .75l2.41 2.41-2.42 2.42c-.21.2-.21.54 0 .74z'/%3E%3Cpath fill='%23868686' d='M10.15 18.43c4.41 0 8-3.59 8-8s-3.59-8-8-8-8 3.59-8 8 3.59 8 8 8zm0-14.94c3.83 0 6.94 3.11 6.94 6.94 0 3.83-3.11 6.94-6.94 6.94-3.83 0-6.94-3.11-6.94-6.94 0-3.83 3.12-6.94 6.94-6.94z'/%3E%3Cpath fill='%233371B7' d='M6.98 33.59a.53.53 0 0 0 .74 0l2.42-2.42 2.43 2.43a.53.53 0 0 0 .74 0c.21-.21.21-.54 0-.75l-2.43-2.43L13.32 28c.21-.21.21-.54 0-.75a.525.525 0 0 0-.75 0l-2.42 2.42-2.41-2.41a.525.525 0 0 0-.75 0c-.21.21-.21.54 0 .75l2.41 2.41-2.42 2.42c-.21.21-.21.55 0 .75z'/%3E%3Cpath fill='%233371B7' d='M10.15 38.43c4.41 0 8-3.59 8-8s-3.59-8-8-8-8 3.59-8 8 3.59 8 8 8zm0-14.94c3.83 0 6.94 3.11 6.94 6.94 0 3.83-3.11 6.94-6.94 6.94-3.83 0-6.94-3.11-6.94-6.94 0-3.83 3.12-6.94 6.94-6.94z'/%3E%3Cpath fill='%23C0C0BF' d='M6.98 53.59a.53.53 0 0 0 .74 0l2.42-2.42 2.43 2.43a.53.53 0 0 0 .74 0c.21-.21.21-.54 0-.75l-2.43-2.43L13.32 48c.21-.21.21-.54 0-.75a.525.525 0 0 0-.75 0l-2.42 2.42-2.41-2.41a.525.525 0 0 0-.75 0c-.21.21-.21.54 0 .75l2.41 2.41-2.42 2.42c-.21.21-.21.55 0 .75z'/%3E%3Cpath fill='%23C0C0BF' d='M10.15 58.43c4.41 0 8-3.59 8-8s-3.59-8-8-8-8 3.59-8 8 3.59 8 8 8zm0-14.94c3.83 0 6.94 3.11 6.94 6.94 0 3.83-3.11 6.94-6.94 6.94-3.83 0-6.94-3.11-6.94-6.94 0-3.83 3.12-6.94 6.94-6.94z'/%3E%3Cpath fill='%236AA9DD' d='M6.98 73.59a.53.53 0 0 0 .74 0l2.42-2.42 2.43 2.43a.53.53 0 0 0 .74 0c.21-.21.21-.54 0-.75l-2.43-2.43L13.32 68c.21-.21.21-.54 0-.75a.525.525 0 0 0-.75 0l-2.42 2.42-2.41-2.41a.525.525 0 0 0-.75 0c-.21.21-.21.54 0 .75l2.41 2.41-2.42 2.42c-.21.21-.21.55 0 .75z'/%3E%3Cpath fill='%236AA9DD' d='M10.15 78.43c4.41 0 8-3.59 8-8s-3.59-8-8-8-8 3.59-8 8 3.59 8 8 8zm0-14.94c3.83 0 6.94 3.11 6.94 6.94 0 3.83-3.11 6.94-6.94 6.94-3.83 0-6.94-3.11-6.94-6.94 0-3.83 3.12-6.94 6.94-6.94z'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;background-size:20px;height:20px;width:20px}.GifPickerReact .gpr-search-container button.gpr-btn-clear-search:focus .gpr-icn-clear-search,.GifPickerReact button.gpr-btn-clear-search:hover .gpr-icn-clear-search{background-position-y:-20px}.GifPickerReact button.gpr-btn-clear-search:focus,.GifPickerReact button.gpr-btn-clear-search:hover{background:var(--gpr-hover-bg-color)}.GifPickerReact.gpr-dark-theme button.gpr-btn-clear-search .gpr-icn-clear-search{background-position-y:-40px}.GifPickerReact.gpr-dark-theme button.gpr-btn-clear-search:hover .gpr-icn-clear-search{background-position-y:-60px}\\n\")","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-search-container{display:block;flex:1;min-width:0;position:relative}.GifPickerReact .gpr-search-container input.gpr-search{background-color:var(--gpr-search-input-bg-color);border:1px solid var(--gpr-search-input-bg-color);border-radius:var(--gpr-search-input-border-radius);color:var(--gpr-search-input-text-color);height:var(--gpr-search-input-height);outline:none;padding:var(--gpr-search-input-padding);transition:all .2s ease-in-out;width:100%}.GifPickerReact .gpr-search-container .gpr-icn-search{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' width='20' height='40'%3E%3Cpath fill='%23868686' fill-rule='evenodd' d='M12 8.81c0 2.08-1.68 3.76-3.76 3.76s-3.76-1.68-3.76-3.76 1.68-3.76 3.76-3.76S12 6.73 12 8.81zm-.77 3.91c-.83.64-1.87 1.01-2.99 1.01-2.72 0-4.92-2.2-4.92-4.92 0-2.72 2.2-4.92 4.92-4.92 2.72 0 4.92 2.2 4.92 4.92 0 1.13-.38 2.16-1.01 2.99l3.94 3.93c.25.25.25.66 0 .92-.25.25-.66.25-.92 0l-3.94-3.93z' clip-rule='evenodd'/%3E%3Cpath fill='%23C0C0BF' fill-rule='evenodd' d='M12 28.81c0 2.08-1.68 3.76-3.76 3.76s-3.76-1.68-3.76-3.76 1.68-3.76 3.76-3.76S12 26.73 12 28.81zm-.77 3.91c-.83.64-1.87 1.01-2.99 1.01-2.72 0-4.92-2.2-4.92-4.92 0-2.72 2.2-4.92 4.92-4.92 2.72 0 4.92 2.2 4.92 4.92 0 1.13-.38 2.16-1.01 2.99l3.94 3.93c.25.25.25.66 0 .92-.25.25-.66.25-.92 0l-3.94-3.93z' clip-rule='evenodd'/%3E%3C/svg%3E\\\");background-position:0 0;background-repeat:no-repeat;background-size:20px;content:\\\"\\\";height:20px;left:var(--gpr-search-bar-inner-padding);position:absolute;top:50%;transform:translateY(-50%);width:20px}.GifPickerReact.gpr-dark-theme .gpr-search-container .gpr-icn-search{background-position-y:-20px}.GifPickerReact .gpr-search-container input.gpr-search::-moz-placeholder{color:var(--gpr-search-input-placeholder-color)}.GifPickerReact .gpr-search-container input.gpr-search::placeholder{color:var(--gpr-search-input-placeholder-color)}.GifPickerReact .gpr-search-container input.gpr-search:focus{background-color:var(--gpr-search-input-bg-color-active);border:1px solid var(--gpr-search-border-color-active)}\\n\")","import React, { useContext } from 'react';\nimport PickerContext from '../../context/PickerContext';\nimport Button from '../Button';\nimport './Title.css';\n\nexport interface TitleProps {\n\tchildren: React.ReactNode;\n}\n\nfunction Title({ children }: TitleProps): JSX.Element {\n\tconst [ pickerContext, setPickerContext ] = useContext(PickerContext);\n\n\tfunction onClear(): void {\n\t\tconst contextCopy = Object.assign({}, pickerContext);\n\t\tcontextCopy.showTrending = false;\n\t\tsetPickerContext(contextCopy);\n\t}\n\n\treturn (\n\t\t<div className='gpr-title-container'>\n\t\t\t<div className='gpr-title'>\n\t\t\t\t{children}\n\t\t\t</div>\n\n\t\t\t<Button className={'gpr-btn-clear-search'} onClick={onClear}>\n\t\t\t\t<div className=\"gpr-icn-clear-search\" />\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n\nexport default Title;\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact .gpr-title-container{display:block;flex:1;min-width:0;position:relative}.GifPickerReact .gpr-title-container .gpr-title{align-items:center;background-color:var(--gpr-search-input-bg-color);border-radius:var(--gpr-search-input-border-radius);color:var(--gpr-search-input-text-color);display:flex;height:var(--gpr-search-input-height);padding:var(--gpr-horizontal-padding);width:100%}\\n\")","import React, { useContext } from 'react';\nimport SettingsContext from '../context/SettingsContext';\nimport { Theme } from '../types/exposedTypes';\n\nexport interface PickerMainProps {\n    children: React.ReactNode;\n}\n\nfunction PickerMain({ children }: PickerMainProps): JSX.Element {\n\tconst settings = useContext(SettingsContext);\n\n\tconst style: React.CSSProperties = {\n\t\theight: settings.height,\n\t\twidth: settings.width\n\t};\n\n\treturn (\n\t\t<aside className={`GifPickerReact gpr-main ${settings.theme === Theme.DARK ? ' gpr-dark-theme' : ''}`} style={style}>\n\t\t\t{children}\n\t\t</aside>\n\t);\n}\n\nexport default PickerMain;\n","export enum ContentFilter {\n    HIGH = 'high',\n    MEDIUM = 'medium',\n    LOW = 'low',\n    OFF = 'off'\n}\nexport enum Theme {\n    LIGHT = 'light',\n    DARK = 'dark',\n    AUTO = 'auto'\n}\n\nexport interface TenorImage {\n\tid: string;\n    tenorUrl: string;\n    shortTenorUrl: string;\n    description: string;\n    createdAt: Date;\n    tags: string[];\n    url: string;\n    height: number;\n    width: number;\n    preview: TenorImagePreview;\n}\n\nexport interface TenorImagePreview {\n    url: string;\n    height: number;\n    width: number;\n}\n","import styleInject from '#style-inject';styleInject(\".GifPickerReact{--gpr-highlight-color:#007aeb;--gpr-hover-bg-color:#f1f8ff;--gpr-focus-bg-color:#e0f0ff;--gpr-text-color:#858585;--gpr-search-input-bg-color:#f6f6f6;--gpr-picker-border-color:#e7e7e7;--gpr-bg-color:#fff;--gpr-horizontal-padding:10px;--gpr-picker-border-radius:8px;--gpr-header-padding:15px var(--gpr-horizontal-padding);--gpr-search-input-bg-color-active:var(--gpr-search-input-bg-color);--gpr-search-input-padding:0 32px;--gpr-search-input-border-radius:8px;--gpr-search-input-height:40px;--gpr-search-input-text-color:var(--gpr-text-color);--gpr-search-input-placeholder-color:var(--gpr-text-color);--gpr-search-bar-inner-padding:var(--gpr-horizontal-padding);--gpr-search-border-color-active:var(--gpr-highlight-color);--gpr-body-padding:var(--gpr-header-padding) 0px;--gpr-category-list-padding:var(--gpr-horizontal-padding);--gpr-category-border-radius:4px;--gpr-category-background-opacity:40%;--gpr-category-font-color:var(--gpr-picker-border-color);--gpr-category-font-size:16px;--gpr-category-font-weight:600;--gpr-category-shadow-opacity:60%;--gpr-category-shadow-opacity-hover:65%;--gpr-category-border-color-hover:var(--gpr-highlight-color);--gpr-placeholder-color:#d3d3d3;color-scheme:light}.GifPickerReact.gpr-dark-theme{--gpr-dark:#000;--gpr-hover-bg-color:#363636f6;--gpr-focus-bg-color:#474747;--gpr-text-color:silver;--gpr-search-input-bg-color:#3b3b3b;--gpr-picker-border-color:#2b2b2b;--gpr-bg-color:#222;--gpr-category-font-color:#e7e7e7;--gpr-search-input-bg-color-active:var(--gpr-dark);--gpr-placeholder-color:var(--gpr-search-input-bg-color);color-scheme:dark}.GifPickerReact *{box-sizing:border-box}.GifPickerReact.gpr-main{background-color:var(--gpr-bg-color);border-color:var(--gpr-picker-border-color);border-radius:var(--gpr-picker-border-radius);border-style:solid;border-width:1px;color:var(--gpr-text-color);display:flex;flex-direction:column;position:relative}.GifPickerReact button.gpr-btn{background:none;border:0;cursor:pointer;outline:none;padding:0}\\n\")","import { Dispatch, SetStateAction, useState } from 'react';\n\nexport interface PickerContextType {\n    searchTerm: string;\n\tshowTrending: boolean\n}\n\nfunction usePickerContext(): [PickerContextType, Dispatch<SetStateAction<PickerContextType>>] {\n\tconst DEFAULT_SETTINGS: PickerContextType = {\n\t\tsearchTerm: '',\n\t\tshowTrending: false\n\t};\n\n\tconst [ pickerContext, setPickerContext ] = useState<PickerContextType>(DEFAULT_SETTINGS);\n\n\treturn [ pickerContext, setPickerContext ];\n}\n\nexport default usePickerContext;\n","import { GifPickerReactProps } from '../GifPickerReact';\nimport { ContentFilter, TenorImage, Theme } from '../types/exposedTypes';\n\n/**\n * This is a parsed version of props with filled defaults\n */\nexport type GifPickerSettings = {\n    tenorApiKey: string;\n\tonGifClick?: (gif: TenorImage) => void;\n\tautoFocusSearch: boolean;\n\tclientKey: string;\n\tcountry: string;\n\tlocale: string;\n\tcontentFilter: ContentFilter;\n\theight: string;\n\twidth: string;\n\tcategoryHeight: string;\n\ttheme: Theme;\n}\n\nfunction useSettings(props: GifPickerReactProps): GifPickerSettings {\n\tif(!props.tenorApiKey) {\n\t\tthrow new Error('tenorApiKey is a required prop that is missing');\n\t}\n\treturn {\n\t\ttenorApiKey: props.tenorApiKey,\n\t\tonGifClick: props.onGifClick ?? undefined,\n\t\tautoFocusSearch: props.autoFocusSearch ?? true,\n\t\tclientKey: props.clientKey ?? 'gif-picker-react',\n\t\tcountry: props.country ?? 'US',\n\t\tlocale: props.locale ?? 'en_US',\n\t\tcontentFilter: props.contentFilter ?? ContentFilter.OFF,\n\t\theight: praseDimension(props.height ?? 450),\n\t\twidth: praseDimension(props.width ?? 350),\n\t\tcategoryHeight: praseDimension(props.categoryHeight ?? 100),\n\t\ttheme: getTheme(props.theme)\n\t};\n}\n\n/**\n * Processed raw dimension as number or string to css property. You can provide\n * a number that will be treated as pixel size, or your any accepted css height as string.\n * @param dimension raw dimension\n * @returns css size string\n */\nfunction praseDimension(dimension: string | number): string {\n\tif(typeof dimension == 'number') {\n\t\treturn `${dimension}px`;\n\t}\n\telse if(typeof dimension == 'string') {\n\t\treturn dimension;\n\t}\n\telse {\n\t\tthrow new TypeError('Invalid dimension provided');\n\t}\n}\n\n/**\n * Check for a theme passed in. If not passed default to Light.\n * Otherwise check for auto or return what was passed in.\n * @param theme theme to check\n * @returns theme to use\n */\nfunction getTheme(theme?: Theme): Theme {\n\tif (theme === Theme.AUTO) {\n\t\treturn isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n\t}\n\telse {\n\t\treturn theme ?? Theme.LIGHT;\n\t}\n}\n\n/**\n * Check for system settings for darkmode\n * @returns true if system is using dark theme\n */\nfunction isSystemDarkTheme(): boolean {\n\tif (typeof window === 'undefined') {\n\t\treturn false;\n\t}\n\n\treturn !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n\nexport default useSettings;\n","import { ContentFilter, TenorImage } from '../types/exposedTypes';\n\nconst MEDIA_FILTER = 'gif,tinygif';\nconst BASE_URL = 'https://tenor.googleapis.com/v2/';\n\nexport interface TenorCategory {\n\timage: string;\n\tname: string;\n}\n\nexport interface TenorResult {\n\tnext: string;\n\timages: TenorImage[];\n}\n\nclass TenorManager {\n\tprivate apiKey: string;\n\tprivate clientKey: string;\n\tprivate country: string;\n\tprivate locale: string;\n\tprivate contentFilter: ContentFilter;\n\n\tconstructor(\n\t\tapiKey: string,\n\t\tclientKey: string,\n\t\tcountry: string,\n\t\tlocale: string,\n\t\tcontentFilter: ContentFilter\n\t) {\n\t\tthis.apiKey = apiKey;\n\t\tthis.clientKey = clientKey;\n\t\tthis.country = country;\n\t\tthis.locale = locale;\n\t\tthis.contentFilter = contentFilter;\n\t}\n\n\tprivate async callApi(endpoint: string, params?: {[key: string]: any}): Promise<Response> {\n\t\tconst urlParams = new URLSearchParams({\n\t\t\t'key': this.apiKey,\n\t\t\t'client_key': this.clientKey,\n\t\t\t'contentfilter': this.contentFilter,\n\t\t\t'media_filter': MEDIA_FILTER,\n\t\t\t'locale': this.locale,\n\t\t\t'country': this.country,\n\t\t\t...params\n\t\t});\n\t\tconst url = BASE_URL + endpoint + '?' + urlParams;\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif(!res.ok) {\n\t\t\t\t\tconsole.error(res);\n\t\t\t\t\tconsole.error('[gif-picker-react] Failed to fetch data from Tenor API');\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t\tconsole.error('[gif-picker-react] Failed to fetch data from Tenor API');\n\t\t\t});\n\t}\n\n\tprivate praseResult(img: any): TenorImage {\n\t\tconst preview = img['media_formats']['tinygif'];\n\t\tconst gif = img['media_formats']['gif'];\n\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttenorUrl: img['itemurl'] ,\n\t\t\tshortTenorUrl: img.url,\n\t\t\tdescription: img['content_description'],\n\t\t\tcreatedAt: new Date(img.created * 1000),\n\t\t\ttags: img.tags,\n\t\t\turl: gif.url,\n\t\t\twidth: gif.dims[0],\n\t\t\theight: gif.dims[1],\n\t\t\tpreview: {\n\t\t\t\turl: preview.url,\n\t\t\t\twidth: preview.dims[0],\n\t\t\t\theight: preview.dims[1]\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic async categories(): Promise<TenorCategory[]> {\n\t\treturn this.callApi('categories', {\n\t\t\ttype: 'featured'\n\t\t})\n\t\t\t.then((data: any) => {\n\t\t\t\tconst tags = data.tags;\n\t\t\t\treturn tags.map((tag: any) => ({\n\t\t\t\t\tname: tag['searchterm'],\n\t\t\t\t\timage: tag.image\n\t\t\t\t}));\n\t\t\t});\n\t}\n\n\tpublic async search(term: string, limit = 50): Promise<TenorResult> {\n\t\treturn this.callApi('search', {\n\t\t\tq: term,\n\t\t\t'ar_range': 'all',\n\t\t\tlimit\n\t\t})\n\t\t\t.then((data: any) => {\n\t\t\t\tconst results = data.results;\n\t\t\t\tconst images = results.map(this.praseResult);\n\t\t\t\treturn {\n\t\t\t\t\tnext: data.next,\n\t\t\t\t\timages: images\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tpublic async trending(limit = 50): Promise<TenorResult> {\n\t\treturn this.callApi('featured', {\n\t\t\t'ar_range': 'all',\n\t\t\tlimit\n\t\t})\n\t\t\t.then((data: any) => {\n\t\t\t\tconst results = data.results;\n\t\t\t\tconst images = results.map(this.praseResult);\n\t\t\t\treturn {\n\t\t\t\t\tnext: data.next,\n\t\t\t\t\timages: images\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tpublic async registerShare(image: TenorImage, searchTerm?: string): Promise<void> {\n\t\tconst params: any = { id: image.id };\n\t\tif(searchTerm) params['q'] = searchTerm;\n\t\tawait this.callApi('registershare', params);\n\t\treturn;\n\t}\n}\n\nexport default TenorManager;\n"]}